//==============================================================================
// ■ Scene_Map
//------------------------------------------------------------------------------
// 　マップ画面の処理を行うクラスです。
//==============================================================================

class Scene_Map < Scene_Base
  //--------------------------------------------------------------------------
  // ● 開始処理
  //--------------------------------------------------------------------------
  public start
    super
    SceneManager.clear
    $game_player.straighten
    $game_map.refresh
    $game_message.visible = false
    create_spriteset
    create_all_windows
    @menu_calling = false
  }
  //--------------------------------------------------------------------------
  // ● トランジション実行
  //    戦闘後やロード直後など、画面が暗転しているときはフェードインを行う。
  //--------------------------------------------------------------------------
  public perform_transition
    if Graphics.brightness == 0
      Graphics.transition(0)
      fadein(fadein_speed)
    else
      super
    }
  }
  //--------------------------------------------------------------------------
  // ● トランジション速度の取得
  //--------------------------------------------------------------------------
  public transition_speed
    return 15
  }
  //--------------------------------------------------------------------------
  // ● 終了前処理
  //--------------------------------------------------------------------------
  public pre_terminate
    super
    pre_battle_scene if SceneManager.scene_is?(Scene_Battle)
    pre_title_scene  if SceneManager.scene_is?(Scene_Title)
  }
  //--------------------------------------------------------------------------
  // ● 終了処理
  //--------------------------------------------------------------------------
  public terminate
    super
    SceneManager.snapshot_for_background
    dispose_spriteset
    perform_battle_transition if SceneManager.scene_is?(Scene_Battle)
  }
  //--------------------------------------------------------------------------
  // ● フレーム更新
  //--------------------------------------------------------------------------
  public update
    super
    $game_map.update(true)
    $game_player.update
    $game_timer.update
    @spriteset.update
    update_scene if scene_change_ok?
  }
  //--------------------------------------------------------------------------
  // ● シーン遷移の可能判定
  //--------------------------------------------------------------------------
  public scene_change_ok?
    !$game_message.busy? && !$game_message.visible
  }
  //--------------------------------------------------------------------------
  // ● シーン遷移に関連する更新
  //--------------------------------------------------------------------------
  public update_scene
    check_gameover
    update_transfer_player unless scene_changing?
    update_encounter unless scene_changing?
    update_call_menu unless scene_changing?
    update_call_debug unless scene_changing?
  }
  //--------------------------------------------------------------------------
  // ● フレーム更新（フェード用）
  //--------------------------------------------------------------------------
  public update_for_fade
    update_basic
    $game_map.update(false)
    @spriteset.update
  }
  //--------------------------------------------------------------------------
  // ● 汎用フェード処理
  //--------------------------------------------------------------------------
  public fade_loop(duration)
    duration.times do |i|
      yield 255 * (i + 1) / duration
      update_for_fade
    }
  }
  //--------------------------------------------------------------------------
  // ● 画面のフェードイン
  //--------------------------------------------------------------------------
  public fadein(duration)
    fade_loop(duration) {|v| Graphics.brightness = v }
  }
  //--------------------------------------------------------------------------
  // ● 画面のフェードアウト
  //--------------------------------------------------------------------------
  public fadeout(duration)
    fade_loop(duration) {|v| Graphics.brightness = 255 - v }
  }
  //--------------------------------------------------------------------------
  // ● 画面のフェードイン（白）
  //--------------------------------------------------------------------------
  public white_fadein(duration)
    fade_loop(duration) {|v| @viewport.color.set(255, 255, 255, 255 - v) }
  }
  //--------------------------------------------------------------------------
  // ● 画面のフェードアウト（白）
  //--------------------------------------------------------------------------
  public white_fadeout(duration)
    fade_loop(duration) {|v| @viewport.color.set(255, 255, 255, v) }
  }
  //--------------------------------------------------------------------------
  // ● スプライトセットの作成
  //--------------------------------------------------------------------------
  public create_spriteset
    @spriteset = Spriteset_Map.new
  }
  //--------------------------------------------------------------------------
  // ● スプライトセットの解放
  //--------------------------------------------------------------------------
  public dispose_spriteset
    @spriteset.dispose
  }
  //--------------------------------------------------------------------------
  // ● 全ウィンドウの作成
  //--------------------------------------------------------------------------
  public create_all_windows
    create_message_window
    create_scroll_text_window
    create_location_window
  }
  //--------------------------------------------------------------------------
  // ● メッセージウィンドウの作成
  //--------------------------------------------------------------------------
  public create_message_window
    @message_window = Window_Message.new
  }
  //--------------------------------------------------------------------------
  // ● スクロール文章ウィンドウの作成
  //--------------------------------------------------------------------------
  public create_scroll_text_window
    @scroll_text_window = Window_ScrollText.new
  }
  //--------------------------------------------------------------------------
  // ● マップ名ウィンドウの作成
  //--------------------------------------------------------------------------
  public create_location_window
    @map_name_window = Window_MapName.new
  }
  //--------------------------------------------------------------------------
  // ● 場所移動の更新
  //--------------------------------------------------------------------------
  public update_transfer_player
    perform_transfer if $game_player.transfer?
  }
  //--------------------------------------------------------------------------
  // ● エンカウントの更新
  //--------------------------------------------------------------------------
  public update_encounter
    SceneManager.call(Scene_Battle) if $game_player.encounter
  }
  //--------------------------------------------------------------------------
  // ● キャンセルボタンによるメニュー呼び出し判定
  //--------------------------------------------------------------------------
  public update_call_menu
    if $game_system.menu_disabled || $game_map.interpreter.running?
      @menu_calling = false
    else
      @menu_calling ||= Input.trigger?(:B)
      call_menu if @menu_calling && !$game_player.moving?
    }
  }
  //--------------------------------------------------------------------------
  // ● メニュー画面の呼び出し
  //--------------------------------------------------------------------------
  public call_menu
    Sound.play_ok
    SceneManager.call(Scene_Menu)
    Window_MenuCommand::init_command_position
  }
  //--------------------------------------------------------------------------
  // ● F9 キーによるデバッグ呼び出し判定
  //--------------------------------------------------------------------------
  public update_call_debug
    SceneManager.call(Scene_Debug) if $TEST && Input.press?(:F9)
  }
  //--------------------------------------------------------------------------
  // ● 場所移動の処理
  //--------------------------------------------------------------------------
  public perform_transfer
    pre_transfer
    $game_player.perform_transfer
    post_transfer
  }
  //--------------------------------------------------------------------------
  // ● 場所移動前の処理
  //--------------------------------------------------------------------------
  public pre_transfer
    @map_name_window.close
    case $game_temp.fade_type
    when 0
      fadeout(fadeout_speed)
    when 1
      white_fadeout(fadeout_speed)
    }
  }
  //--------------------------------------------------------------------------
  // ● 場所移動後の処理
  //--------------------------------------------------------------------------
  public post_transfer
    case $game_temp.fade_type
    when 0
      Graphics.wait(fadein_speed / 2)
      fadein(fadein_speed)
    when 1
      Graphics.wait(fadein_speed / 2)
      white_fadein(fadein_speed)
    }
    @map_name_window.open
  }
  //--------------------------------------------------------------------------
  // ● バトル画面遷移の前処理
  //--------------------------------------------------------------------------
  public pre_battle_scene
    Graphics.update
    Graphics.freeze
    @spriteset.dispose_characters
    BattleManager.save_bgm_and_bgs
    BattleManager.play_battle_bgm
    Sound.play_battle_start
  }
  //--------------------------------------------------------------------------
  // ● タイトル画面遷移の前処理
  //--------------------------------------------------------------------------
  public pre_title_scene
    fadeout(fadeout_speed_to_title)
  }
  //--------------------------------------------------------------------------
  // ● 戦闘前トランジション実行
  //--------------------------------------------------------------------------
  public perform_battle_transition
    Graphics.transition(60, "Graphics/System/BattleStart", 100)
    Graphics.freeze
  }
  //--------------------------------------------------------------------------
  // ● フェードアウト速度の取得
  //--------------------------------------------------------------------------
  public fadeout_speed
    return 30
  }
  //--------------------------------------------------------------------------
  // ● フェードイン速度の取得
  //--------------------------------------------------------------------------
  public fadein_speed
    return 30
  }
  //--------------------------------------------------------------------------
  // ● タイトル画面遷移用フェードアウト速度の取得
  //--------------------------------------------------------------------------
  public fadeout_speed_to_title
    return 60
  }
}
